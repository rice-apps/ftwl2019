{"ast":null,"code":"var _jsxFileName = \"/Users/annabai/Rice/riceapps/ftwl2019/components/faq/TableText.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Flex, Image } from 'rebass';\nimport './TableText.css';\nimport { client } from '../../client';\n\nfunction TableText() {\n  // Declare the use of FAQ as a state object\n  const {\n    0: FAQ,\n    1: setFAQ\n  } = useState([]); // Use effect with (func, empty array) means that func gets called when this\n  // component is rendered.\n\n  useEffect(() => {\n    // // Use client object to retrieve an entry\n    client.getEntries({\n      'content_type': 'singleQa'\n    }).then(function (entries) {\n      // Sort entries by date\n      // entries.items.sort((a, b) => {\n      //     console.log(Date.parse(a.sys.createdAt));\n      //     return Date.parse(a.sys.createdAt) < Date.parse(b.sys.createdAt);\n      // })\n      // Reverse items\n      entries.items.reverse(); // Set state FAQ variable\n\n      setFAQ(entries.items);\n    }); // // Use client object to retrieve an entry\n    // client.getEntry('2XgFSQ5SEmUVz6JLeUTQOw')\n    // .then(function (entry) {\n    //     console.log(entry.fields.questions);\n    //     setFAQ(entry.fields.questions);\n    // });\n  }, []);\n  return __jsx(\"div\", {\n    className: \"TableText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, FAQ.map( // Map an array using (a, b, c) => {} where:\n  // a is element\n  // b is element's index in the array\n  // c is the entire array\n  (q, idx1, arr) => {\n    return __jsx(Flex, {\n      key: idx1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, __jsx(Box, {\n      width: 1 / 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }), __jsx(Box, {\n      width: 3 / 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 40\n      }\n    }, q.fields.topic))), __jsx(Box, {\n      width: 1 / 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }), __jsx(Box, {\n      width: 2 / 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 40\n      }\n    }, q.fields.question)), q.fields.answer.split('\\n').map((a, idx2) => {\n      return __jsx(\"p\", {\n        key: idx2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 49\n        }\n      }, a);\n    })), __jsx(Box, {\n      width: 1 / 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }));\n  }));\n}\n\nexport default TableText;","map":{"version":3,"sources":["/Users/annabai/Rice/riceapps/ftwl2019/components/faq/TableText.js"],"names":["React","useState","useEffect","Box","Flex","Image","client","TableText","FAQ","setFAQ","getEntries","then","entries","items","reverse","map","q","idx1","arr","fields","topic","question","answer","split","a","idx2"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,QAAiC,QAAjC;AACA,OAAO,iBAAP;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,SAASC,SAAT,GAAqB;AAEjB;AACA,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBR,QAAQ,CAAC,EAAD,CAA9B,CAHiB,CAKjB;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AAEZ;AACAI,IAAAA,MAAM,CAACI,UAAP,CAAkB;AACd,sBAAgB;AADF,KAAlB,EAGKC,IAHL,CAGU,UAAUC,OAAV,EAAmB;AACrB;AACA;AACA;AACA;AACA;AAEA;AACAA,MAAAA,OAAO,CAACC,KAAR,CAAcC,OAAd,GARqB,CAUrB;;AACAL,MAAAA,MAAM,CAACG,OAAO,CAACC,KAAT,CAAN;AACH,KAfL,EAHY,CAoBZ;AACA;AACA;AACA;AACA;AACA;AACH,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQL,GAAG,CAACO,GAAJ,EACI;AACA;AACA;AACA;AACA,GAACC,CAAD,EAAIC,IAAJ,EAAUC,GAAV,KAAkB;AACd,WACI,MAAC,IAAD;AAAM,MAAA,GAAG,EAAED,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE,IAAI,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE,IAAI,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,CAAC,CAACG,MAAF,CAASC,KAAb,CAAH,CADJ,CAFJ,EAKI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE,IAAI,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE,IAAI,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,CAAC,CAACG,MAAF,CAASE,QAAb,CAAH,CADJ,EAMKL,CAAC,CAACG,MAAF,CAASG,MAAT,CAAgBC,KAAhB,CAAsB,IAAtB,EAA4BR,GAA5B,CACG,CAACS,CAAD,EAAIC,IAAJ,KAAa;AACT,aACI;AAAG,QAAA,GAAG,EAAEA,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeD,CAAf,CADJ;AAGH,KALJ,CANL,CANJ,EAqBI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE,IAAI,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBJ,CADJ;AAyBH,GA/BL,CAFR,CADJ;AAuCH;;AAED,eAAejB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Flex, Image } from 'rebass';\nimport './TableText.css';\nimport { client } from '../../client';\n\nfunction TableText() {\n\n    // Declare the use of FAQ as a state object\n    const [FAQ, setFAQ] = useState([]);\n\n    // Use effect with (func, empty array) means that func gets called when this\n    // component is rendered.\n    useEffect(() => {\n\n        // // Use client object to retrieve an entry\n        client.getEntries({\n            'content_type': 'singleQa'\n        })\n            .then(function (entries) {\n                // Sort entries by date\n                // entries.items.sort((a, b) => {\n                //     console.log(Date.parse(a.sys.createdAt));\n                //     return Date.parse(a.sys.createdAt) < Date.parse(b.sys.createdAt);\n                // })\n\n                // Reverse items\n                entries.items.reverse();\n\n                // Set state FAQ variable\n                setFAQ(entries.items);\n            })\n\n        // // Use client object to retrieve an entry\n        // client.getEntry('2XgFSQ5SEmUVz6JLeUTQOw')\n        // .then(function (entry) {\n        //     console.log(entry.fields.questions);\n        //     setFAQ(entry.fields.questions);\n        // });\n    }, [])\n\n    return (\n        <div className=\"TableText\">\n            {\n                FAQ.map(\n                    // Map an array using (a, b, c) => {} where:\n                    // a is element\n                    // b is element's index in the array\n                    // c is the entire array\n                    (q, idx1, arr) => {\n                        return (\n                            <Flex key={idx1}>\n                                <Box width={1 / 5}></Box>\n                                <Box width={3 / 20}>\n                                    <p><b>{q.fields.topic}</b></p>\n                                </Box>\n                                <Box width={1 / 20}></Box>\n                                <Box width={2 / 5}>\n                                    <p><b>{q.fields.question}</b></p>\n\n                                    {/* Split by \\n separates the string\n                                    into a list of strings separated by\n                                    the paragraphs. */}\n                                    {q.fields.answer.split('\\n').map(\n                                        (a, idx2) => {\n                                            return (\n                                                <p key={idx2}>{a}</p>\n                                            );\n                                        }\n                                    )}\n\n                                </Box>\n                                <Box width={1 / 5}></Box>\n\n                            </Flex>);\n                    }\n                )\n            }\n        </div>\n    );\n}\n\nexport default TableText;"]},"metadata":{},"sourceType":"module"}