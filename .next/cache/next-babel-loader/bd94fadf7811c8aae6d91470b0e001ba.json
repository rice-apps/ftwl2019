{"ast":null,"code":"var _jsxFileName = \"/Users/annabai/Rice/riceapps/ftwl2019/components/faq/TableText.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Flex, Image } from 'rebass';\nimport './TableText.css';\nimport client from '../../client';\n\nfunction TableText() {\n  // Declare the use of FAQ as a state object\n  var _useState = useState([]),\n      FAQ = _useState[0],\n      setFAQ = _useState[1]; // Use effect with (func, empty array) means that func gets called when this\n  // component is rendered.\n\n\n  useEffect(function () {\n    // // Use client object to retrieve an entry\n    client.getEntries({\n      'content_type': 'singleQa'\n    }).then(function (entries) {\n      // Sort entries by date\n      // entries.items.sort((a, b) => {\n      //     console.log(Date.parse(a.sys.createdAt));\n      //     return Date.parse(a.sys.createdAt) < Date.parse(b.sys.createdAt);\n      // })\n      // Reverse items\n      entries.items.reverse(); // Set state FAQ variable\n\n      setFAQ(entries.items);\n    }); // // Use client object to retrieve an entry\n    // client.getEntry('2XgFSQ5SEmUVz6JLeUTQOw')\n    // .then(function (entry) {\n    //     console.log(entry.fields.questions);\n    //     setFAQ(entry.fields.questions);\n    // });\n  }, []);\n  return __jsx(\"div\", {\n    className: \"TableText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, FAQ.map( // Map an array using (a, b, c) => {} where:\n  // a is element\n  // b is element's index in the array\n  // c is the entire array\n  function (q, idx1, arr) {\n    return __jsx(Flex, {\n      key: idx1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(Box, {\n      width: 1 / 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), __jsx(Box, {\n      width: 3 / 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, q.fields.topic))), __jsx(Box, {\n      width: 1 / 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), __jsx(Box, {\n      width: 2 / 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, q.fields.question)), q.fields.answer.split('\\n').map(function (a, idx2) {\n      return __jsx(\"p\", {\n        key: idx2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, a);\n    })), __jsx(Box, {\n      width: 1 / 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }));\n}\n\nexport default TableText;","map":{"version":3,"sources":["/Users/annabai/Rice/riceapps/ftwl2019/components/faq/TableText.js"],"names":["React","useState","useEffect","Box","Flex","Image","client","TableText","FAQ","setFAQ","getEntries","then","entries","items","reverse","map","q","idx1","arr","fields","topic","question","answer","split","a","idx2"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,QAAiC,QAAjC;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,SAAT,GAAqB;AAEjB;AAFiB,kBAGKN,QAAQ,CAAC,EAAD,CAHb;AAAA,MAGVO,GAHU;AAAA,MAGLC,MAHK,iBAKjB;AACA;;;AACAP,EAAAA,SAAS,CAAC,YAAM;AAEZ;AACAI,IAAAA,MAAM,CAACI,UAAP,CAAkB;AACd,sBAAgB;AADF,KAAlB,EAGGC,IAHH,CAGQ,UAAUC,OAAV,EAAmB;AACvB;AACA;AACA;AACA;AACA;AAEA;AACAA,MAAAA,OAAO,CAACC,KAAR,CAAcC,OAAd,GARuB,CAUvB;;AACAL,MAAAA,MAAM,CAACG,OAAO,CAACC,KAAT,CAAN;AACD,KAfH,EAHY,CAoBZ;AACA;AACA;AACA;AACA;AACA;AACH,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQL,GAAG,CAACO,GAAJ,EACI;AACA;AACA;AACA;AACA,YAACC,CAAD,EAAIC,IAAJ,EAAUC,GAAV,EAAkB;AACd,WACA,MAAC,IAAD;AAAM,MAAA,GAAG,EAAED,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE,IAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE,IAAE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,CAAC,CAACG,MAAF,CAASC,KAAb,CAAH,CADJ,CAFJ,EAKI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE,IAAE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE,IAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,CAAC,CAACG,MAAF,CAASE,QAAb,CAAH,CADJ,EAMKL,CAAC,CAACG,MAAF,CAASG,MAAT,CAAgBC,KAAhB,CAAsB,IAAtB,EAA4BR,GAA5B,CACG,UAACS,CAAD,EAAIC,IAAJ,EAAa;AAAC,aACV;AAAG,QAAA,GAAG,EAAEA,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeD,CAAf,CADU;AAGb,KAJJ,CANL,CANJ,EAoBI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAI,IAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,CADA;AAwBH,GA9BL,CAFR,CADJ;AAsCH;;AAED,eAAejB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Flex, Image } from 'rebass';\nimport './TableText.css';\nimport client from '../../client';\n\nfunction TableText() {\n\n    // Declare the use of FAQ as a state object\n    const [FAQ, setFAQ] = useState([]);\n\n    // Use effect with (func, empty array) means that func gets called when this\n    // component is rendered.\n    useEffect(() => {\n\n        // // Use client object to retrieve an entry\n        client.getEntries({\n            'content_type': 'singleQa'\n          })\n          .then(function (entries) {\n            // Sort entries by date\n            // entries.items.sort((a, b) => {\n            //     console.log(Date.parse(a.sys.createdAt));\n            //     return Date.parse(a.sys.createdAt) < Date.parse(b.sys.createdAt);\n            // })\n\n            // Reverse items\n            entries.items.reverse();\n            \n            // Set state FAQ variable\n            setFAQ(entries.items);\n          })\n          \n        // // Use client object to retrieve an entry\n        // client.getEntry('2XgFSQ5SEmUVz6JLeUTQOw')\n        // .then(function (entry) {\n        //     console.log(entry.fields.questions);\n        //     setFAQ(entry.fields.questions);\n        // });\n    }, [])\n\n    return (\n        <div className=\"TableText\">\n             {\n                FAQ.map(\n                    // Map an array using (a, b, c) => {} where:\n                    // a is element\n                    // b is element's index in the array\n                    // c is the entire array\n                    (q, idx1, arr) => {\n                        return (\n                        <Flex key={idx1}>\n                            <Box width={1/5}></Box>\n                            <Box width={3/20}>\n                                <p><b>{q.fields.topic}</b></p>\n                            </Box>\n                            <Box width={1/20}></Box>\n                            <Box width={2/5}>\n                                <p><b>{q.fields.question}</b></p>\n                                \n                                {/* Split by \\n separates the string\n                                    into a list of strings separated by\n                                    the paragraphs. */}\n                                {q.fields.answer.split('\\n').map(\n                                    (a, idx2) => {return (\n                                        <p key={idx2}>{a}</p>\n                                    );\n                                    }\n                                )}\n\n                            </Box>\n                            <Box width = {1/5}></Box>\n\n                        </Flex>);\n                    }\n                )\n             }\n        </div>\n    );\n}\n\nexport default TableText;"]},"metadata":{},"sourceType":"module"}